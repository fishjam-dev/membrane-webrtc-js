// @generated by protoc-gen-es v1.0.0
// @generated from file proto/webrtc_signalling.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message ClientSignallingMsg
 */
export const ClientSignallingMsg = proto3.makeMessageType(
  "ClientSignallingMsg",
  () => [
    { no: 1, name: "join", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "content" },
    { no: 2, name: "leave", kind: "message", T: Payload_Empty, oneof: "content" },
    { no: 3, name: "updatePeerMetadata", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "content" },
    { no: 4, name: "updateTrackMetadata", kind: "message", T: Payload_TrackWithMetadata, oneof: "content" },
    { no: 5, name: "renegotiateTracks", kind: "message", T: Payload_Empty, oneof: "content" },
    { no: 9, name: "candidate", kind: "message", T: Payload_ICECandidate, oneof: "content" },
    { no: 10, name: "sdpOffer", kind: "message", T: Payload_SdpOffer, oneof: "content" },
    { no: 11, name: "setTargetVariant", kind: "message", T: Payload_TrackVariant, oneof: "content" },
  ],
);

/**
 * @generated from message ServerSignallingMsg
 */
export const ServerSignallingMsg = proto3.makeMessageType(
  "ServerSignallingMsg",
  () => [
    { no: 1, name: "peerAccepted", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "content" },
    { no: 2, name: "peerJoined", kind: "message", T: Payload_Peer, oneof: "content" },
    { no: 3, name: "peerUpdated", kind: "message", T: Payload_Peer, oneof: "content" },
    { no: 4, name: "peerLeft", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "content" },
    { no: 5, name: "trackAdded", kind: "message", T: Payload_Track, oneof: "content" },
    { no: 6, name: "trackUpdated", kind: "message", T: Payload_TrackWithMetadata, oneof: "content" },
    { no: 7, name: "trackRemoved", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "content" },
    { no: 8, name: "variantSwitched", kind: "message", T: Payload_TrackVariantSwitched, oneof: "content" },
    { no: 9, name: "sdpAnswer", kind: "message", T: Payload_SdpAnswer, oneof: "content" },
    { no: 10, name: "offerData", kind: "message", T: Payload_OfferData, oneof: "content" },
    { no: 11, name: "candidate", kind: "message", T: Payload_ICECandidate, oneof: "content" },
    { no: 12, name: "sdpOffer", kind: "message", T: Payload_SdpOffer, oneof: "content" },
    { no: 13, name: "vadNotification", kind: "message", T: Payload_VoiceActivity, oneof: "content" },
    { no: 14, name: "bandwidthEstimation", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "content" },
  ],
);

/**
 * @generated from message Payload
 */
export const Payload = proto3.makeMessageType(
  "Payload",
  [],
);

/**
 * @generated from message Payload.Empty
 */
export const Payload_Empty = proto3.makeMessageType(
  "Payload.Empty",
  [],
  {localName: "Payload_Empty"},
);

/**
 * @generated from message Payload.TrackWithMetadata
 */
export const Payload_TrackWithMetadata = proto3.makeMessageType(
  "Payload.TrackWithMetadata",
  () => [
    { no: 2, name: "trackId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
  {localName: "Payload_TrackWithMetadata"},
);

/**
 * @generated from message Payload.Track
 */
export const Payload_Track = proto3.makeMessageType(
  "Payload.Track",
  () => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "trackId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "mid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Payload_Track"},
);

/**
 * @generated from message Payload.ICECandidate
 */
export const Payload_ICECandidate = proto3.makeMessageType(
  "Payload.ICECandidate",
  () => [
    { no: 1, name: "candidate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sdpMLineIndex", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
  {localName: "Payload_ICECandidate"},
);

/**
 * @generated from message Payload.SdpOffer
 */
export const Payload_SdpOffer = proto3.makeMessageType(
  "Payload.SdpOffer",
  () => [
    { no: 1, name: "sdp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tracks", kind: "message", T: Payload_Track, repeated: true },
  ],
  {localName: "Payload_SdpOffer"},
);

/**
 * @generated from message Payload.SdpAnswer
 */
export const Payload_SdpAnswer = proto3.makeMessageType(
  "Payload.SdpAnswer",
  () => [
    { no: 1, name: "sdp", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "midToTrackId", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
  {localName: "Payload_SdpAnswer"},
);

/**
 * @generated from message Payload.TrackVariant
 */
export const Payload_TrackVariant = proto3.makeMessageType(
  "Payload.TrackVariant",
  () => [
    { no: 1, name: "trackId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "variant", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Payload_TrackVariant"},
);

/**
 * @generated from message Payload.TrackVariantSwitched
 */
export const Payload_TrackVariantSwitched = proto3.makeMessageType(
  "Payload.TrackVariantSwitched",
  () => [
    { no: 1, name: "newVariant", kind: "message", T: Payload_TrackVariant },
    { no: 2, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Payload_TrackVariantSwitched"},
);

/**
 * @generated from message Payload.OfferData
 */
export const Payload_OfferData = proto3.makeMessageType(
  "Payload.OfferData",
  () => [
    { no: 1, name: "audioTracks", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "videoTracks", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "integratedTurnServers", kind: "message", T: Payload_OfferData_TurnServer, repeated: true },
  ],
  {localName: "Payload_OfferData"},
);

/**
 * @generated from message Payload.OfferData.TurnServer
 */
export const Payload_OfferData_TurnServer = proto3.makeMessageType(
  "Payload.OfferData.TurnServer",
  () => [
    { no: 1, name: "addr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "transport", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Payload_OfferData_TurnServer"},
);

/**
 * @generated from message Payload.Peer
 */
export const Payload_Peer = proto3.makeMessageType(
  "Payload.Peer",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
  {localName: "Payload_Peer"},
);

/**
 * @generated from message Payload.VoiceActivity
 */
export const Payload_VoiceActivity = proto3.makeMessageType(
  "Payload.VoiceActivity",
  () => [
    { no: 1, name: "trackId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "vad", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
  {localName: "Payload_VoiceActivity"},
);

